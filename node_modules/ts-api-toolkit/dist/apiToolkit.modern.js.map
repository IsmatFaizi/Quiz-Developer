{"version":3,"file":"apiToolkit.modern.js","sources":["../src/index.ts"],"sourcesContent":["import redaxios, { Options as RedaxiosOptions } from 'redaxios';\n\ninterface Options {\n    tokenKey: string;\n    baseUrl: string;\n    authSchema: string;\n}\n\ntype HttpMethod = 'get' | 'delete' | 'head' | 'options' | 'post' | 'put' | 'patch';\n\nexport default (function create(options?: Partial<Options>) {\n    const opts: Options = Object.assign({ tokenKey: 'jwt', baseUrl: '/api/v1', authSchema: 'Bearer' }, options);\n\n    const getToken = () => localStorage.getItem(opts.tokenKey);\n\n    const formConfig = (config?: RedaxiosOptions) =>\n        Object.assign(config || {}, {\n            auth: getToken() ? `${opts.authSchema} ${getToken()}` : undefined,\n            baseURL: opts.baseUrl,\n        });\n\n    const apiToolkit = (\n        resource: string,\n        method: HttpMethod,\n        config: RedaxiosOptions,\n        data?: Record<string, unknown>,\n    ) => redaxios[method](resource, data, formConfig(config));\n\n    apiToolkit.getToken = getToken;\n    apiToolkit.saveToken = (token: string) => localStorage.setItem(opts.tokenKey, token);\n    apiToolkit.destroyToken = () => localStorage.removeItem(opts.tokenKey);\n\n    apiToolkit.get = (resource: string, config?: RedaxiosOptions) => redaxios['get'](resource, formConfig(config));\n    apiToolkit.delete = (resource: string, config?: RedaxiosOptions) =>\n        redaxios['delete'](resource, formConfig(config));\n    apiToolkit.head = (resource: string, config?: RedaxiosOptions) => redaxios['head'](resource, formConfig(config));\n    apiToolkit.options = (resource: string, config?: RedaxiosOptions) =>\n        redaxios['options'](resource, formConfig(config));\n\n    apiToolkit.post = (resource: string, data: Record<string, unknown>, config?: RedaxiosOptions) =>\n        redaxios['post'](resource, data, formConfig(config));\n    apiToolkit.put = (resource: string, data: Record<string, unknown>, config?: RedaxiosOptions) =>\n        redaxios['put'](resource, data, formConfig(config));\n    apiToolkit.patch = (resource: string, data: Record<string, unknown>, config?: RedaxiosOptions) =>\n        redaxios['patch'](resource, data, formConfig(config));\n\n    apiToolkit.create = create;\n\n    return apiToolkit;\n})();\n"],"names":["create","options","opts","Object","assign","tokenKey","baseUrl","authSchema","getToken","localStorage","getItem","formConfig","config","auth","undefined","baseURL","apiToolkit","resource","method","data","redaxios","saveToken","token","setItem","destroyToken","removeItem","get","delete","head","post","put","patch"],"mappings":"wBAUA,MAAe,SAAUA,EAAOC,GAC5B,MAAMC,EAAgBC,OAAOC,OAAO,CAAEC,SAAU,MAAOC,QAAS,UAAWC,WAAY,UAAYN,GAE7FO,EAAW,IAAMC,aAAaC,QAAQR,EAAKG,UAE3CM,EAAcC,GAChBT,OAAOC,OAAOQ,GAAU,GAAI,CACxBC,KAAML,OAAgBN,EAAKK,cAAcC,WAAeM,EACxDC,QAASb,EAAKI,UAGhBU,EAAa,CACfC,EACAC,EACAN,EACAO,IACCC,EAASF,GAAQD,EAAUE,EAAMR,EAAWC,IAsBjD,OApBAI,EAAWR,SAAWA,EACtBQ,EAAWK,UAAaC,GAAkBb,aAAac,QAAQrB,EAAKG,SAAUiB,GAC9EN,EAAWQ,aAAe,IAAMf,aAAagB,WAAWvB,EAAKG,UAE7DW,EAAWU,IAAM,CAACT,EAAkBL,IAA6BQ,EAAQ,IAAQH,EAAUN,EAAWC,IACtGI,EAAWW,OAAS,CAACV,EAAkBL,IACnCQ,EAAQ,OAAWH,EAAUN,EAAWC,IAC5CI,EAAWY,KAAO,CAACX,EAAkBL,IAA6BQ,EAAQ,KAASH,EAAUN,EAAWC,IACxGI,EAAWf,QAAU,CAACgB,EAAkBL,IACpCQ,EAAQ,QAAYH,EAAUN,EAAWC,IAE7CI,EAAWa,KAAO,CAACZ,EAAkBE,EAA+BP,IAChEQ,EAAQ,KAASH,EAAUE,EAAMR,EAAWC,IAChDI,EAAWc,IAAM,CAACb,EAAkBE,EAA+BP,IAC/DQ,EAAQ,IAAQH,EAAUE,EAAMR,EAAWC,IAC/CI,EAAWe,MAAQ,CAACd,EAAkBE,EAA+BP,IACjEQ,EAAQ,MAAUH,EAAUE,EAAMR,EAAWC,IAEjDI,EAAWhB,OAASA,EAEbgB,EAtCI"}